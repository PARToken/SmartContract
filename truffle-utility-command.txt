cr = PARCrowdsale.at(PARCrowdsale.address)
cr.token.call().then(function(result){tk = PARToken.at(result); return tk;})

cr.rate.call().then(function(result) {return web3.fromWei(result.toNumber(), "ether" );});
cr.paused.call().then(function(result) {return result;});

cr.pause({from: web3.eth.accounts[0],gas: 4700000, gasprice: web3.toWei(25, "gwei")})

cr.sendTransaction({from: web3.eth.accounts[7],gas: 4700000,value: web3.toWei(10, "ether")}).then(function(result) {return result;});

tk.balanceOf.call(web3.eth.accounts[0]).then(function(result) {return web3.fromWei(result.toNumber(), "ether" );});
tk.balanceOf.call(web3.eth.accounts[1]).then(function(result) {return web3.fromWei(result.toNumber(), "ether" );});
tk.balanceOf.call(web3.eth.accounts[2]).then(function(result) {return web3.fromWei(result.toNumber(), "ether" );});
tk.balanceOf.call(web3.eth.accounts[3]).then(function(result) {return web3.fromWei(result.toNumber(), "ether" );});
tk.balanceOf.call(web3.eth.accounts[4]).then(function(result) {return web3.fromWei(result.toNumber(), "ether" );});
tk.balanceOf.call(web3.eth.accounts[5]).then(function(result) {return web3.fromWei(result.toNumber(), "ether" );});
tk.balanceOf.call(web3.eth.accounts[6]).then(function(result) {return web3.fromWei(result.toNumber(), "ether" );});
tk.balanceOf.call(web3.eth.accounts[7]).then(function(result) {return web3.fromWei(result.toNumber(), "ether" );});
tk.balanceOf.call(web3.eth.accounts[8]).then(function(result) {return web3.fromWei(result.toNumber(), "ether" );});
tk.balanceOf.call(web3.eth.accounts[9]).then(function(result) {return web3.fromWei(result.toNumber(), "ether" );});
tk.balanceOf.call(cr.address).then(function(result) {return web3.fromWei(result.toNumber(), "ether" );});

cr.soldToken.call().then(function(result) {return web3.fromWei(result.toNumber(), "ether" );});
cr.bonusToken.call().then(function(result) {return web3.fromWei(result.toNumber(), "ether" );});



console.log(web3.fromWei(web3.eth.getBalance(web3.eth.accounts[0]), "ether" ).toNumber())
console.log(web3.fromWei(web3.eth.getBalance(web3.eth.accounts[1]), "ether" ).toNumber())
console.log(web3.fromWei(web3.eth.getBalance(web3.eth.accounts[2]), "ether" ).toNumber())
console.log(web3.fromWei(web3.eth.getBalance(web3.eth.accounts[3]), "ether" ).toNumber())
console.log(web3.fromWei(web3.eth.getBalance(web3.eth.accounts[4]), "ether" ).toNumber())
console.log(web3.fromWei(web3.eth.getBalance(web3.eth.accounts[5]), "ether" ).toNumber())
console.log(web3.fromWei(web3.eth.getBalance(web3.eth.accounts[6]), "ether" ).toNumber())
console.log(web3.fromWei(web3.eth.getBalance(web3.eth.accounts[7]), "ether" ).toNumber())
console.log(web3.fromWei(web3.eth.getBalance(web3.eth.accounts[8]), "ether" ).toNumber())
console.log(web3.fromWei(web3.eth.getBalance(web3.eth.accounts[9]), "ether" ).toNumber())


events = cr.allEvents({fromBlock: 0, toBlock: 'latest'});
events.get( (error, log) => {event_data = log;});
event_data.forEach(function(x){ console.log( x.args.msgText + ': ' + web3.fromWei(x.args.msgVal,"ether") ); });

console.log(event_data[9].args.msgText + ': ' +web3.fromWei(event_data[9].args.msgVal,"ether").toNumber())
